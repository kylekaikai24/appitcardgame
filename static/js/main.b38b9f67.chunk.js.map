{"version":3,"sources":["Asset/image/cardback.png","Asset/image/spinner.gif","Asset/svg/planet.jsx","Components/card.jsx","Components/modal.jsx","Asset/svg/rocket.jsx","Hooks/useIsMobile.jsx","Context/shouldCallApiContext.jsx","Views/Game.jsx","Data/data.js","Util/useRegex.jsx","Views/Scorebroad.jsx","App.js","index.js"],"names":["module","exports","Planet","props","color","size","version","id","x","y","viewBox","width","height","fill","d","card","classname","onClick","className","src","Back","alt","modal","count","reGame","setFormData","value","showErrorMsg","type","placeholder","playerName","onChange","e","target","preventDefault","rocket","rotate","style","transform","useIsMobile","React","useState","window","innerWidth","isMobile","setIsMobile","useEffect","updateIsMobile","addEventListener","removeEventListener","ShouldApiCallContext","createContext","withRouter","initData","setInitData","isBusy","setIsBusy","matched","setMatched","needCheck","index","cardToCheck","setCardToCheck","victory","setVictory","countScore","setCount","score","formData","setShowErrorMsg","data","temporaryValue","randomIndex","isFlip","isMatch","currentIndex","length","Math","floor","random","useShuffledData","context","useContext","localStorageGameData","localStorage","getItem","localStorageGameScore","localStorageCardToCheck","localStorageMatchedSet","JSON","parse","parseInt","prevState","checkForCardMatch","cardId","a","cardMatch","cardMismatch","newData","firstCardIndex","secondCardIndex","setTimeout","handleSubmitAndReGame","string","match","options","method","headers","url","axios","handleResetAll","console","log","setApiCall","removeItem","to","setItem","stringify","map","i","key","handleFlip","tableData","setTableData","isLoading","setIsLoading","fetchData","sortData","sort","b","apiCall","rankingDataStorage","Array","isArray","Spinner","item","App","providerValue","useMemo","basename","Provider","exact","path","component","Game","Scorebroad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b38b9f67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cardback.1669af11.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.2028b651.gif\";","import React from \"react\";\n\nconst Planet = (props) => {\n  const { color, size } = props;\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 471.04 471.04\"\n      width={size}\n      height={size}\n    >\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M440.32,435.2h-20.48v-20.48c0-3.072-2.048-5.12-5.12-5.12c-3.072,0-5.12,2.048-5.12,5.12v20.48h-20.48\n\t\t\tc-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12h20.48v20.48c0,3.072,2.048,5.12,5.12,5.12\n\t\t\tc3.072,0,5.12-2.048,5.12-5.12v-20.48h20.48c3.072,0,5.12-2.048,5.12-5.12C445.44,437.248,442.88,435.2,440.32,435.2z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M43.52,384h-7.68v-7.68c0-3.072-2.048-5.12-5.12-5.12c-3.072,0-5.12,2.048-5.12,5.12V384h-7.68\n\t\t\tc-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12h7.68v7.68c0,3.072,2.048,5.12,5.12,5.12\n\t\t\tc3.072,0,5.12-2.048,5.12-5.12v-7.68h7.68c3.072,0,5.12-2.048,5.12-5.12C48.64,386.048,46.08,384,43.52,384z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M453.12,25.6h-7.68v-7.68c0-3.072-2.048-5.12-5.12-5.12c-3.072,0-5.12,2.048-5.12,5.12v7.68h-7.68\n\t\t\tc-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.56,5.12,5.12,5.12h7.68v7.68c0,3.072,2.048,5.12,5.12,5.12\n\t\t\tc3.072,0,5.12-2.048,5.12-5.12v-7.68h7.68c3.072,0,5.12-2.048,5.12-5.12C458.24,27.648,456.192,25.6,453.12,25.6z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M107.52,435.2h-51.2c-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12h51.2c3.072,0,5.12-2.048,5.12-5.12\n\t\t\tC112.64,437.248,110.08,435.2,107.52,435.2z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M56.32,102.4H5.12c-3.072,0-5.12,2.048-5.12,5.12s2.048,5.12,5.12,5.12h51.2c2.56,0,5.12-2.048,5.12-5.12\n\t\t\tS59.392,102.4,56.32,102.4z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M158.72,25.6h-51.2c-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12h51.2c3.072,0,5.12-2.048,5.12-5.12\n\t\t\tC163.84,27.648,161.792,25.6,158.72,25.6z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M465.92,332.8h-25.6c-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12h25.6c3.072,0,5.12-2.048,5.12-5.12\n\t\t\tC471.04,334.848,468.48,332.8,465.92,332.8z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M30.208,307.2c-2.56,0-5.12,2.56-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12c3.072,0,5.12-2.048,5.12-5.12\n\t\t\tC35.328,309.248,32.768,307.2,30.208,307.2z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M440.32,153.6c-3.072,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12c3.072,0,5.12-2.048,5.12-5.12\n\t\t\tC445.44,155.648,442.88,153.6,440.32,153.6z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M286.72,0c-2.56,0-5.12,2.048-5.12,5.12c0,3.072,2.048,5.12,5.12,5.12s5.12-2.048,5.12-5.12\n\t\t\tC291.84,2.048,289.28,0,286.72,0z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M391.168,59.904c-12.8-12.8-39.424-9.728-76.8,9.728C289.792,57.856,262.656,51.2,233.472,51.2\n\t\t\tc-101.888,0-184.32,82.432-184.32,184.32c0,29.184,6.656,56.32,18.944,80.896c-19.968,36.864-23.04,63.488-10.24,76.8\n\t\t\tc5.632,5.632,12.8,7.68,22.016,7.68c44.032,0,126.464-58.88,193.536-125.44c44.032-44.032,80.384-89.6,102.912-129.536\n\t\t\tC392.704,116.736,409.088,77.824,391.168,59.904z M59.392,235.52c0-4.608,0-9.216,0.512-13.824L219.648,61.952\n\t\t\tc4.608-0.512,9.216-0.512,13.824-0.512h0.512c0,0.512-0.512,1.024-1.024,1.536L59.392,236.544\n\t\t\tC59.392,236.544,59.392,236.032,59.392,235.52z M60.928,257.024L254.976,62.976c4.096,0.512,8.192,1.024,12.288,2.048\n\t\t\tl-204.8,204.8C61.952,265.216,61.44,261.12,60.928,257.024z M67.072,286.208L284.16,69.12c3.584,1.024,7.168,2.048,10.752,3.584\n\t\t\tc0,0.512-0.512,0.512-0.512,1.024L70.656,296.96C69.12,293.376,68.096,289.792,67.072,286.208z M367.104,140.288\n\t\t\tc-22.016,38.912-57.856,83.968-100.864,127.488c-94.208,94.208-181.248,137.728-201.216,117.76\n\t\t\tc-8.704-8.192-5.12-29.696,8.704-58.368c9.728,17.408,22.528,32.768,37.376,45.568c38.4-17.408,92.16-55.296,148.48-111.616\n\t\t\tc43.008-43.008,79.36-88.576,100.864-127.488c4.096-7.168,7.68-14.336,10.752-20.992c-13.312-14.848-28.672-27.648-46.08-37.376\n\t\t\tc28.672-13.824,49.664-17.408,58.368-8.704C393.728,76.8,387.072,103.936,367.104,140.288z\"\n          />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path\n            fill={color}\n            d=\"M390.656,139.264c-2.048,3.584-3.584,7.168-5.632,10.24c-22.528,39.936-58.88,85.504-102.912,129.536\n\t\t\tc-47.616,47.616-103.424,91.136-146.944,112.128c28.16,17.92,61.952,28.672,98.304,28.672c101.888,0,184.32-82.432,184.32-184.32\n\t\t\tC417.792,200.192,407.552,166.912,390.656,139.264z M207.872,407.552L405.504,209.92c0.512,4.096,1.024,8.704,1.536,13.312\n\t\t\tL220.672,409.088C216.576,408.576,211.968,408.064,207.872,407.552z M396.288,297.472L295.424,398.336\n\t\t\tc-6.656,2.56-13.312,4.608-20.48,6.144c0-0.512,0.512-1.024,1.024-1.536l124.928-124.928c0.512-0.512,1.024-1.024,1.536-1.024\n\t\t\tC400.896,284.16,398.848,290.816,396.288,297.472z M407.04,248.32L246.272,409.088c-4.096,0.512-8.704,0.512-12.8,0.512\n\t\t\tc-0.512,0-1.536,0-2.048,0l176.128-176.128c0,0.512,0,1.536,0,2.048C407.552,239.616,407.552,244.224,407.04,248.32z\"\n          />\n        </g>\n      </g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n    </svg>\n  );\n};\n\nexport default Planet;\n","import React from \"react\";\n\nimport Back from \"../Asset/image/cardback.png\";\n\nimport Planet from \"../Asset/svg/planet\";\n\nconst card = (props) => {\n  const { classname, onClick, color } = props;\n  return (\n    <div className={`card ${classname}`} onClick={onClick}>\n      <div className=\"card-back card-face\">\n        <img src={Back} alt=\"background\" className=\"card-back-img\" />\n      </div>\n      <div className=\"card-front card-face\">\n        <Planet size={100} color={color} />\n      </div>\n    </div>\n  );\n};\n\nexport default card;\n","import React from \"react\";\n\nimport \"../Asset/css/modal.css\";\n\nconst modal = (props) => {\n  const { count, reGame, setFormData, value, showErrorMsg } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    reGame();\n  };\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"modal-body\">\n        <p className=\"congrat-msg\">congratulations!</p>\n        <p className=\"modal-score\">your score is {count}</p>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"input your name to check your ranking\"\n            className=\"modal-name-input\"\n            value={value.playerName}\n            onChange={(e) => {\n              setFormData({ ...value, playerName: e.target.value });\n            }}\n          />\n          <p className=\"remind-msg\">\n            *1-10 English or Chinese characters without symbol and space\n          </p>\n          {showErrorMsg && <p className=\"error-msg\">Invalid name</p>}\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            onClick={handleSubmit}\n            className=\"modal-submit\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default modal;\n","import React from \"react\";\n\nconst rocket = (props) => {\n  const { color, size, rotate } = props;\n  return (\n    <svg\n      id=\"Capa_1\"\n      height={size}\n      viewBox=\"0 0 511.945 511.945\"\n      width={size}\n      style={{ transform: `rotate(${rotate}deg)`}}\n    >\n      <g>\n        <path fill={color} d=\"m346.392 165.542c-7.239-7.24-16.886-11.225-27.164-11.217-20.825.012-38.392 16.708-38.386 38.373.003 10.279 3.99 19.928 11.228 27.164 14.979 14.979 39.325 15 54.274.051 15.003-15.004 15.025-39.394.048-54.371z\" />\n        <path fill={color} d=\"m511.945.089-15.003.014c-107.34.102-212.507 45.281-288.567 123.971l-149.082 149.081 179.488 179.486 149.073-149.072c37.509-36.152 68.594-80.732 89.903-128.924 40.388-91.346 33.309-165.178 34.188-174.556zm-241.051 240.951c-26.685-26.688-26.678-69.999-.049-96.625 26.694-26.696 70.008-26.764 96.723-.049 26.653 26.652 26.632 70.045-.047 96.725-26.624 26.623-69.97 26.599-96.627-.051z\" />\n        <path\n          fill={color}\n          d=\"m-4.88 446.723h110.233v29.949h-110.233z\"\n          transform=\"matrix(.707 -.707 .707 .707 -311.748 170.742)\"\n        />\n        <path\n          fill={color}\n          d=\"m98.599 464.477h39.489v29.948h-39.489z\"\n          transform=\"matrix(.707 -.707 .707 .707 -304.354 224.098)\"\n        />\n        <path\n          fill={color}\n          d=\"m12.775 378.699h39.252v29.946h-39.252z\"\n          transform=\"matrix(.707 -.707 .707 .707 -268.884 138.222)\"\n        />\n        <path fill={color} d=\"m389.634 359.466-7.662-7.662-122.016 122.017 38.035 38.036 67.604-67.604z\" />\n        <path fill={color} d=\"m67.61 146.251-67.61 67.611 38.115 38.118 122.019-122.02-7.662-7.662z\" />\n        <path fill={color} d=\"m34.858 334.036 143.038 143.039 29.315-13.65-158.704-158.701z\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default rocket;\n","import React from \"react\";\n\nexport const useIsMobile = () => {\n  const [isMobile, setIsMobile] = React.useState(\n    window.innerWidth < 768 ? true : false\n  );\n\n  React.useEffect(() => {\n    const updateIsMobile = () => {\n      setIsMobile(window.innerWidth < 568 ? true : false);\n    };\n    window.addEventListener(\"resize\", updateIsMobile);\n\n    return () => {\n      window.removeEventListener(\"resize\", updateIsMobile);\n    };\n  });\n\n  return isMobile;\n};\n","import React from \"react\";\n\nexport const ShouldApiCallContext = React.createContext(null);\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// components\nimport Card from \"../Components/card\";\nimport Modal from \"../Components/modal\";\n\n// css\nimport \"../Asset/css/game.css\";\n\n// icons\nimport Planet from \"../Asset/svg/planet\";\nimport Rocket from \"../Asset/svg/rocket\";\n\n// Utils & Custom Hooks & Context\nimport { useShuffledData } from \"../Data/data\";\nimport { useIsMobile } from \"../Hooks/useIsMobile\";\nimport { UseRegex } from \"../Util/useRegex\";\nimport { ShouldApiCallContext } from \"../Context/shouldCallApiContext\";\n\nconst Game = (props) => {\n  // State\n  const [initData, setInitData] = React.useState();\n  const [isBusy, setIsBusy] = React.useState(false);\n  const [matched, setMatched] = React.useState([]);\n  const [cardToCheck, setCardToCheck] = React.useState({\n    id: null,\n    needCheck: false,\n    index: null,\n  });\n  const [victory, setVictory] = React.useState(false);\n  const [countScore, setCount] = React.useState(0);\n  const [formData, setFormData] = React.useState({\n    playerName: \"\",\n    score: 0,\n  });\n  const [showErrorMsg, setShowErrorMsg] = React.useState(false);\n\n  // check mobile size\n  const isMobile = useIsMobile();\n\n  // shuffle data\n  const data = useShuffledData();\n\n  // input context\n  const context = React.useContext(ShouldApiCallContext);\n\n  /* \n    Get data from localstorage when component mount, if no localstorage then init new data\n    set initial data to shuffled data when component mounted\n*/\n  React.useEffect(() => {\n    const localStorageGameData = localStorage.getItem(\"gameDataStorage\");\n    const localStorageGameScore = localStorage.getItem(\"gameScoreStorage\") || 0;\n    const localStorageCardToCheck = localStorage.getItem(\n      \"cardToCheckStorage\"\n    ) || { id: null, needCheck: false, index: null };\n    const localStorageMatchedSet =\n      localStorage.getItem(\"gameDataMatchedStorage\") || [];\n\n    if (localStorageGameData !== null) {\n      setInitData(JSON.parse(localStorageGameData));\n      setCount(parseInt(localStorageGameScore));\n      setCardToCheck(JSON.parse(localStorageCardToCheck));\n      setMatched(JSON.parse(localStorageMatchedSet));\n    } else {\n      setInitData(data);\n    }\n  }, []);\n\n  // check winning status if matched array length is equal to the data length\n  React.useEffect(() => {\n    if (initData && matched.length === initData.length) {\n      setVictory(true);\n    }\n  }, [matched]);\n\n  // handle form data change\n  React.useEffect(() => {\n    setFormData((prevState) => ({ ...prevState, score: countScore }));\n  }, [countScore]);\n\n  /* \n    Flip card function \n    1.) identify fliped card\n    2.) if card to check then check if two cards match\n    3.) no match => change card isFlip status back to false\n    4.) is match => push to matched array \"test ci\"\n*/\n  const handleFlip = (index, card) => {\n    const newData = [...initData];\n    newData[index].isFlip = true;\n    setInitData(newData);\n\n    if (cardToCheck.needCheck) {\n      checkForCardMatch(card.id, index);\n    } else {\n      const newData = { ...cardToCheck };\n      newData.needCheck = true;\n      newData.id = card.id;\n      newData.index = index;\n      setCardToCheck(newData);\n    }\n  };\n\n  const checkForCardMatch = async (cardId, index) => {\n    if (cardId === cardToCheck.id) {\n      await cardMatch(index);\n      setMatched((prevState) => [...prevState, cardId, cardToCheck.id]);\n    } else {\n      cardMismatch(index, cardToCheck.index);\n    }\n  };\n\n  const cardMatch = (index) => {\n    const newData = [...initData];\n    newData[index].isMatch = true;\n    newData[cardToCheck.index].isMatch = true;\n    setCardToCheck({ id: null, needCheck: false, index: null });\n    setCount((prevState) => prevState + 5);\n  };\n\n  const cardMismatch = (firstCardIndex, secondCardIndex) => {\n    setIsBusy(true);\n    setTimeout(() => {\n      const newData = [...initData];\n      newData[firstCardIndex].isFlip = false;\n      newData[secondCardIndex].isFlip = false;\n      setInitData(newData);\n      setCardToCheck({ id: null, needCheck: false, index: null });\n      setIsBusy(false);\n    }, 1000);\n    setCount((prevState) => prevState - 1);\n  };\n\n  // handle game data store to localstorage when changing to other page\n  const handleStoreGameDataToLocalStorage = () => {\n    localStorage.setItem(\"gameDataStorage\", JSON.stringify(initData));\n    localStorage.setItem(\"cardToCheckStorage\", JSON.stringify(cardToCheck));\n    localStorage.setItem(\"gameScoreStorage\", countScore);\n    localStorage.setItem(\"gameDataMatchedStorage\", JSON.stringify(matched));\n  };\n\n  /*\n    handle regex checking, api call, reset all states \n    after player submitted their name and pass the regex\n    send form data to database\n    remove all localstorage regarding the game status\n    set all states to initial value\n*/\n  const handleSubmitAndReGame = async () => {\n    const checkPlayerName = UseRegex(formData.playerName);\n    if (checkPlayerName) {\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"cache-control\": \"no-cache\",\n          \"x-apikey\": \"260c55e44fcc603351421cc1b2c70921bdf32\",\n        },\n        data: formData,\n        url:\n          \"https://cors-anywhere.herokuapp.com/https://ccbascappuat-cf19.restdb.io/rest/game-record\",\n      };\n      try {\n        await axios(options);\n        handleResetAll();\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setShowErrorMsg(true);\n    }\n  };\n\n  // reset all states\n  const handleResetAll = () => {\n    setCount(0);\n    setShowErrorMsg(false);\n    setInitData(data);\n    context.setApiCall(true);\n    setVictory(false);\n    setMatched([]);\n    setCardToCheck({\n      id: null,\n      needCheck: false,\n      index: null,\n    });\n    localStorage.removeItem(\"gameDataStorage\");\n    localStorage.removeItem(\"gameScoreStorage\");\n    localStorage.removeItem(\"cardToCheckStorage\");\n    localStorage.removeItem(\"gameDataMatchedStorage\");\n  };\n\n  return (\n    <div className=\"game-broad-wrapper\">\n      <div className=\"nav\">\n        <Planet size={isMobile ? 50 : 70} color={\"white\"} />\n        <span className=\"game-count\">SCORE: {countScore}</span>\n        <Link to=\"/scorebroad\" onClick={handleStoreGameDataToLocalStorage}>\n          <span className=\"to-scorebroad\">\n            <span className=\"to-scorebroad-text\">scorebroad</span>\n            <Rocket size={20} color={\"white\"} rotate={45} />\n          </span>\n        </Link>\n      </div>\n      <div className=\"game-broad\">\n        {initData &&\n          initData.map((card, i) => (\n            <div className=\"card-container\" key={`card-${i}`}>\n              <Card\n                classname={card.isFlip ? \"visible\" : \"\"}\n                onClick={\n                  isBusy\n                    ? () => {}\n                    : card.isMatch\n                    ? () => {}\n                    : () => handleFlip(i, card)\n                }\n                color={card.color}\n              />\n            </div>\n          ))}\n      </div>\n      {victory && (\n        <Modal\n          count={countScore}\n          reGame={handleSubmitAndReGame}\n          value={formData}\n          setFormData={setFormData}\n          showErrorMsg={showErrorMsg}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Game);\n","export const useShuffledData = () => {\n  const data = [\n    { id: 1, color: \"#afafaf\", isFlip: false, isMatch: false },\n    { id: 1, color: \"#afafaf\", isFlip: false, isMatch: false },\n    { id: 2, color: \"#90ffc7\", isFlip: false, isMatch: false },\n    { id: 2, color: \"#90ffc7\", isFlip: false, isMatch: false },\n    { id: 3, color: \"#bece37\", isFlip: false, isMatch: false },\n    { id: 3, color: \"#bece37\", isFlip: false, isMatch: false },\n    { id: 4, color: \"#37ce3c\", isFlip: false, isMatch: false },\n    { id: 4, color: \"#37ce3c\", isFlip: false, isMatch: false },\n    { id: 5, color: \"#37cec7\", isFlip: false, isMatch: false },\n    { id: 5, color: \"#37cec7\", isFlip: false, isMatch: false },\n    { id: 6, color: \"#5537ce\", isFlip: false, isMatch: false },\n    { id: 6, color: \"#5537ce\", isFlip: false, isMatch: false },\n    { id: 7, color: \"#ce37b4\", isFlip: false, isMatch: false },\n    { id: 7, color: \"#ce37b4\", isFlip: false, isMatch: false },\n    { id: 8, color: \"#ce3737\", isFlip: false, isMatch: false },\n    { id: 8, color: \"#ce3737\", isFlip: false, isMatch: false },\n  ];\n\n  let currentIndex = data.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = data[currentIndex];\n    data[currentIndex] = data[randomIndex];\n    data[randomIndex] = temporaryValue;\n  }\n  return data;\n};\n","export const UseRegex = (string) => {\n  // regex for English/Chinese/Chinese contain symbol\n  const reg = /^[a-z0-9]{1,10}$/i;\n  const reg_chi = /^[\\u4e00-\\u9fff]|[\\u3400-\\u4dbf]|[\\u{20000}-\\u{2a6df}]|[\\u{2a700}-\\u{2b73f}]|[\\u{2b740}-\\u{2b81f}]|[\\u{2b820}-\\u{2ceaf}]|[\\uf900-\\ufaff]|[\\u3300-\\u33ff]|[\\ufe30-\\ufe4f]|[\\uf900-\\ufaff]|[\\u{2f800}-\\u{2fa1f}]$/u;\n  const reg_symbol = /[-@#!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\n  if (string.match(reg)) {\n    return true;\n  } else if (\n    string.match(reg_chi) &&\n    !string.match(reg_symbol) &&\n    string.length > 0 &&\n    string.length < 11\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// css\nimport \"../Asset/css/scorebroad.css\";\n\n// icons\nimport Planet from \"../Asset/svg/planet\";\nimport Rocket from \"../Asset/svg/rocket\";\n\nimport Spinner from \"../Asset/image/spinner.gif\";\n\n// Hooks & Context\nimport { useIsMobile } from \"../Hooks/useIsMobile\";\nimport { ShouldApiCallContext } from \"../Context/shouldCallApiContext\";\n\nconst Scorebroad = (props) => {\n  // State\n  const [tableData, setTableData] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  // Hook & context\n  const isMobile = useIsMobile();\n  const context = React.useContext(ShouldApiCallContext);\n\n  // function: handle fetch data from db and set to state\n  const fetchData = async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"cache-control\": \"no-cache\",\n        \"x-apikey\": \"260c55e44fcc603351421cc1b2c70921bdf32\",\n      },\n      url:\n        \"https://cors-anywhere.herokuapp.com/https://ccbascappuat-cf19.restdb.io/rest/game-record\",\n    };\n    try {\n      const data = await axios(options);\n      setIsLoading(false);\n      let sortData = data.data;\n      sortData.sort((a, b) => (b.score > a.score ? 1 : -1));\n      setTableData(sortData);\n      localStorage.setItem(\"rankingDataStorage\", JSON.stringify(sortData));\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  /*\n    Identify should api be called when component mounted\n    If new rank is submitted in the game page, fetch new data from db\n    If no new ranking, take data from localstorage and set data state\n*/\n  React.useEffect(() => {\n    if (context.apiCall) {\n      setIsLoading(true);\n      fetchData();\n    } else {\n      const rankingDataStorage = localStorage.getItem(\"rankingDataStorage\");\n      if (rankingDataStorage === null) {\n        setIsLoading(true);\n        fetchData();\n      } else if (Array.isArray(JSON.parse(rankingDataStorage))) {\n        setTableData(JSON.parse(rankingDataStorage));\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"scorebroad\">\n      <div className=\"nav\">\n        <Planet size={isMobile ? 50 : 70} color={\"white\"} />\n        <span className=\"game-count\">space rank</span>\n        <Link to=\"/\" onClick={() => context.setApiCall(false)}>\n          <span className=\"to-scorebroad\">\n            <span className=\"to-scorebroad-text\">game</span>\n            <Rocket size={20} color={\"white\"} rotate={45} />\n          </span>\n        </Link>\n      </div>\n      <div className=\"table-container\">\n        <table className=\"rank-table\">\n          <thead>\n            <tr>\n              <th>Rank</th>\n              <th>Player</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {isLoading ? (\n              <tr>\n                <td></td>\n                <td>\n                  <img\n                    alt=\"spinner\"\n                    src={Spinner}\n                    style={{ width: \"50px\", height: \"50px\" }}\n                  />\n                </td>\n                <td></td>\n              </tr>\n            ) : tableData && tableData.length > 0 ? (\n              tableData.map((item, index) => (\n                <tr key={`rank-${index}`}>\n                  <td>{index + 1}</td>\n                  <td>{item.playerName}</td>\n                  <td>{item.score}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td></td>\n                <td>No records</td>\n                <td></td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Scorebroad);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Game from \"../src/Views/Game\";\nimport Scorebroad from \"../src/Views/Scorebroad\";\n\nimport { ShouldApiCallContext } from \"./Context/shouldCallApiContext\";\n\nfunction App() {\n  const [apiCall, setApiCall] = React.useState(true);\n  const providerValue = React.useMemo(() => ({ apiCall, setApiCall }), [\n    apiCall,\n    setApiCall,\n  ]);\n\n  return (\n    <Router basename=\"/appitcardgame/\">\n      <ShouldApiCallContext.Provider value={providerValue}>\n        <Route exact path=\"/\" component={Game} />\n        <Route exact path=\"/scorebroad\" component={Scorebroad} />\n      </ShouldApiCallContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}